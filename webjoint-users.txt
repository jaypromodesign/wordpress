Users

Webjoint authenticates client application users via JWT tokens. For server to server user authentication, you can use your API key to authenticate users via x-for-user-id. Authenticating users via your API key is much simpler but cannot be used in client applications because you would have to store your API key in the client application which is a security concern.

Client application authentication of webjoint usersâ€‹

Provide a login form with email and password fields and send the request to POST /users/login with JSON body:
{
    "email":"daniel@webjoint.com",
    "password":"{password}"
}
API will return an IdToken and a RefreshToken, which you need to use to authenticate further requests. Store both of them in the browser for later use (for example via localStorage)
Use the Authorization header with the value of Bearer {IdToken}
Authorization: Bearer {IdToken}
IdToken is short lived and will expire after an hour of no activity. In this case, the API will return a 401 response. You then need to send a request to POST /users/refresh with the RefreshToken in the JSON body :
{ 
    "refreshToken": "{RefreshToken}"
}
This will give you a new IdToken and a new RefreshToken which you need to store in the browser again and use the new IdToken for further requests